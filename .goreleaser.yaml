# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
before:
  hooks:
    - go mod tidy
builds:
- targets: [go_first_class]
  mod_timestamp: '{{ .CommitTimestamp }}'
  flags:
    # trims path
    - -trimpath
  ldflags:
    # use commit date instead of current date as main.date
    # only needed if you actually use those things in your main package, otherwise can be ignored.
    - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

nfpms:
- file_name_template: '{{ .ConventionalFileName }}'
  homepage:  https://goreleaser.com
  description: Just an example
  maintainer: Carlos Alexandro Becker <carlos@becker.software>
  license: MIT
  vendor: GoReleaser
  bindir: /usr/bin
  section: utils
  formats: [apk, deb, rpm]

release:
  name_template: 'v{{ .Version }}'
  footer: |
    * * *

    <a href="https://goreleser.com"><img src="https://raw.githubusercontent.com/goreleaser/artwork/master/opencollective-header.png" with="100%" alt="GoReleaser logo"></a>

    This is an example release using [GoReleaser Pro](https://goreleaser.com/pro). Check it out!

    - [Documentation](https://goreleaser.com/intro/)
    - [Become a sponsor](https://goreleaser.com/sponsors/)
    - [Discord](https://discord.gg/RGEBtg8vQ6)
    - [Twitter](https://twitter.com/goreleaser)


nightly:
  publish_release: true
  keep_single_release: true
  name_template: '{{ incminor .Version }}-nightly'
  tag_name: nightly


dockers:
- image_templates:
  - 'ghcr.io/caarlos0/goreleaser-pro-split-merge-example:v{{ .Version }}-amd64'
  build_flag_templates:
  - "--pull"
  - "--label=org.opencontainers.image.description=Just an example"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.name={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
  - "--label=org.opencontainers.image.source={{.GitURL}}"
  - "--platform=linux/amd64"
  use: buildx
- image_templates:
  - 'ghcr.io/caarlos0/goreleaser-pro-split-merge-example:v{{ .Version }}-arm64'
  build_flag_templates:
  - "--pull"
  - "--label=org.opencontainers.image.description=Just an example"
  - "--label=org.opencontainers.image.created={{.Date}}"
  - "--label=org.opencontainers.image.name={{.ProjectName}}"
  - "--label=org.opencontainers.image.revision={{.FullCommit}}"
  - "--label=org.opencontainers.image.version={{.Version}}"
  - "--label=org.opencontainers.image.source={{.GitURL}}"
  - "--platform=linux/arm64"
  use: buildx

docker_manifests:
- name_template: 'ghcr.io/caarlos0/goreleaser-pro-split-merge-example:v{{ .Version }}'
  image_templates:
  - 'ghcr.io/caarlos0/goreleaser-pro-split-merge-example:v{{ .Version }}-amd64'
  - 'ghcr.io/caarlos0/goreleaser-pro-split-merge-example:v{{ .Version }}-arm64'
- name_template: '{{ if not .IsNightly }}ghcr.io/caarlos0/goreleaser-pro-split-merge-example:latest{{ end }}'
  image_templates:
  - 'ghcr.io/caarlos0/goreleaser-pro-split-merge-example:v{{ .Version }}-amd64'
  - 'ghcr.io/caarlos0/goreleaser-pro-split-merge-example:v{{ .Version }}-arm64'

monorepo:
  tag_prefix: v # so it always filters out the nightly tag


# signs the checksum file
# all files (including the sboms) are included in the checksum, so we don't need to sign each one if we don't want to
# https://goreleaser.com/customization/sign
signs:
- cmd: cosign
  env:
  - COSIGN_EXPERIMENTAL=1
  certificate: '${artifact}.pem'
  args:
    - sign-blob
    - '--output-certificate=${certificate}'
    - '--output-signature=${signature}'
    - '${artifact}'
  artifacts: checksum
  output: true

# create a source tarball
# https://goreleaser.com/customization/source/
source:
  enabled: true

# creates SBOMs of all archives and the source tarball using syft
# https://goreleaser.com/customization/sbom
sboms:
- artifacts: archive
- id: source # Two different sbom configurations need two different IDs
  artifacts: source

# signs our docker image
# https://goreleaser.com/customization/docker_sign
docker_signs:
- cmd: cosign
  env:
  - COSIGN_EXPERIMENTAL=1
  artifacts: images
  output: true
  args:
  - 'sign'
  - '${artifact}'


# modelines, feel free to remove those if you don't want/use them:
# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
